Uebung E1
---------
E1.1a) 
Funktion von wait():
Dieser Systemaufruf stoppt die Ausführung des genannten Prozesses bis einer seiner Child Prozesse beendet.
Rückgabewert = PID

E1.1b) 
Parameter in wait():
man kann den &status angeben. (int *status). es wird gewartet, bis ein child des prozesses diesen Status erreicht hat.
Pointer auf Status-int, dieser enthält Exit-Code und Exit-Reason

E1.1c)
aufruf equivalent zu wait() mit waitpid()
waitpid(-1, &status, 0)

E1.1d)
Return Value von wait():
Bei Erfolg wird die PID vom beendeten Child prozess zurückgegeben. 
Bei Error wird -1 zurückgegeben.
Mit Macro WIFEXITED: if (WIFEXITED(status)) ..

E1.1e)
WEXITSTATUS. gibt den Exit Status des Childs zhurück.
int exitcode = WEXITSTATUS

E1.2a)
Nein, nur für kurze Zeit, bis der Status mit wait()/waitpid() gelesen wird.

E1.2b)
Es gibt einen 
1 Z  1000 13738 13737  0  80   0 -     0 ?      pts/2    00:00:00 0

weil kein wait() mehr aufgerufen wird.

E1.2c)
Ohne & wird der Prozess beendet mit ctrl + c
Mit & wird der Prozess nicht beendet mit ctrl + c
Bei der Abmeldung wird der Prozess beendet mit und ohne &

E1.2d) 
Mit nobhub wird die Ausgabe in ein File nohub.out gespeichert. Prozess lebt weiter nach der Abmeldung, jedoch keine Ausgabe auf Console

E1.3a)
Verschiedene Parameter
execl = *path, char *arg
execv = *path, char *arg[]
execle = *path, char *arg, ..., char * const envp[]
execlp = *file, char *arg
execvp = *file, char *arg[]

Arrays müssen jweils mit einem NULL pointer abgeschlossen werden. 

E1.3b)
Alle offenen File-Handles
 All process attributes are preserved during an execve(), except the following:
       *      The dispositions of any signals that are being caught are reset ro the default (signal(7)).
       *      Any alternate signal stack is not preserved (sigaltstack(2)).
       *      Memory mappings are not preserved (mmap(2)).
       *      Attached System V shared memory segments are detached (shmat(2)).
       *      POSIX shared memory regions are unmapped (shm_open(3)).
       *      Open POSIX message queue descriptors are closed (mq_overview(7)).
       *      Any open POSIX named semaphores are closed (sem_overview(7)).
       *      POSIX timers are not preserved (timer_create(2)).
       *      Any open directory streams are closed (opendir(3)).
       *      Memory locks are not preserved (mlock(2), mlockall(2)).
       *      Exit handlers are not preserved (atexit(3), on_exit(3)).
       *      The floating-point environment is reset to the default (see fenv(

E1.4
a) done
b) Sofern exec*() nicht ausgeführt werden konnte, z.B. wenn das Binary nicht gefunden wird
c) Weil die Ausführung nach dem if (pid == 0) weiterläuft...
d) Nein
e) Nein
f) Siehe Code. Unter anderem wurde das hässliche Busy-Waiting ersetzt.






 
